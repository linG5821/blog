name: Laravel

on:
  push:
    tags:
      - "*"

jobs:
  default:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php-versions: ['7.2']
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      #      with:
      #        # 这里默认为1 会导致 git describe --tags无法获取全历史记录时的tag
      #        fetch-depth: 0
    - name: Setup PHP, with composer and extensions
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ matrix.php-versions }}
    - name: Get composer cache directory
      id: composer-cache
      run: echo "::set-output name=dir::$(composer config cache-files-dir)"
    - name: Cache composer dependencies
      uses: actions/cache@v2
      with:
        path: ${{ steps.composer-cache.outputs.dir }}
        key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}
        restore-keys: ${{ runner.os }}-composer-
    - name: Copy .env
      run: php -r "file_exists('.env') || copy('.env.example', '.env');"
    - name: Composer update
      run: composer self-update --stable
    - name: Install Dependencies
      run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist --optimize-autoloader
    - name: Package Discover
      run: php artisan package:discover
    - name: Directory Permissions
      run: chmod -R 777 storage bootstrap/cache
#     该种方式默认是从github拉取后直接BUILD直接推送 可以通过切换context来使用已经存在的拉取
    - name: Docker meta
      id: docker_meta
      uses: crazy-max/ghaction-docker-meta@v1
      with:
        images: aidong-backend.tencentcloudcr.com/aidong/blog # list of Docker images to use as base name for tags
        tag-semver: |
          {{version}}
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    - name: Login to Tencent DockerHub
      uses: docker/login-action@v1
      with:
        registry: aidong-backend.tencentcloudcr.com
        username: ${{ secrets.TENCENT_REGISTRY_USERNAME }}
        password: ${{ secrets.TENCENT_REGISTRY_PASSWORD }}
    - name: Build And Push To Tencent Docker Hub
      uses: docker/build-push-action@v2
      with:
        context: .
        push: true
        tags: ${{ steps.docker_meta.outputs.tags }}
        labels: ${{ steps.docker_meta.outputs.labels }}
    # 自行设置 镜像tag的方式
#    - name: set variable
#      run: echo "VERSION=$(git describe --tags)" >> $GITHUB_ENV
#    - name: Build Image
#      run: docker build -t aidong-backend.tencentcloudcr.com/aidong/blog:$VERSION .
#    - name: Login to tencnet docker image registry
#      run: echo "${{ secrets.TENCENT_REGISTRY_PASSWORD }}" |  docker login aidong-backend.tencentcloudcr.com --username ${{ secrets.TENCENT_REGISTRY_USERNAME }} --password-stdin
#    - name: Push Image to tencent docker image registry
#      run: docker push aidong-backend.tencentcloudcr.com/aidong/blog:$VERSION
